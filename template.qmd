---
pagetitle: "Root Sheet 3 - STATS5678" #Edit this row
title-meta: "Root Sheet 3 - STATS5678" #Edit this row
lang: en
format:
  sheet-html: default
---
<!-- Start of banner -->
```{r}
#| results: "asis"
#| echo: false
source("_extensions/david-hodge/sheet/scripts/_banner_template.R")
make_banner( # Edit this function's string values
  type = "tutorial", # Options: lab, tutorial, bonus (see .R file source above)
  logo = TRUE,
  last_updated = "" ,
  sheet_title = "Root Example",
  subtitle = "Topic: Cats & Dogs (optional)",
  course_code = "STATS1234"
)
```
<!-- End of banner -->

<!-- A sample text box (red border) -->
::: {.box .box-red}
## Submission deadline

Please hand in your work to the box before **2pm on Monday 1st January 2045**.

This is a simple template designed for one-off sheets etc...

To create an identical-looking PDF it is **highly recommended** to compile to HTML then open in Chrome/Chromium and "Print to PDF". The table of contents and `Last updated` field are hidden by default. Chrome has probably the best PDF printing engine currently. If you are happy with a LaTeX style then compiling to PDF should work fine too.

If you have issues with pagebreaks in the PDF you can insert `\pagebreak` into the text and it only affects the Print to PDF version.
:::

<!-- This double border red box is hidden
::: {.box .box-red-double}
## Plagiarism warning
This is a box with a medium thickness double red border (two lines close together) and left-aligned text.
:::
-->

<!-- A sample text box (blue double border) -->
::: {.box .box-blue}
## Information about the template
::::: small
This template has opted for an approach to generating numbered Questions where you customize the text manually. No automatic numbering. This has advantages and disadvantages. For accessibility it means the titles of the Exercises (or whatever you choose to call them) end up well-tagged and in the table of contents (if you turn it on). This is likely desirable for tutorial/homework/problem sheets, and in contrast to what is desirable in a long document where theorem-like objects can be numbered automatically but should not all appear in the table of contents.

Sub-part list styles, a) vs (a) etc... are defined near the bottom of the `scss/_question.scss` file if you wish to customize it.
:::::
:::

::: {.question}

## Question 1

a. This will be called part (a) not a) or a., as this style has been defined in the file `scss/_question.scss`.
a. This is part (b).
a. Finally, this is part (c).

In the source file you might as well name the items a., b., c. or a), b), c).

1. This is a numbered list.
1. Items can optionally be all numbered as 1\. when using Markdown, if you wish, and they are automatically incrementally numbered.
1. Markdown will put the right values on them.

Every question ends with a light horizontal line, this is defined via the filter at the top by the file `hr-after-question.lua`. You can of course fully remove this if you wish. It inserts an `<hr>` element into the HTML, it does nothing if you compile to PDF.

:::

::: {.question}

## Question 2

a. Oh no not another question part.

b. And is this part (b)

c. Is this part (c)?

d. You can increase spacing by leaving blank lines.

:::

:::{.question}

## Question 3

If you're keen on having content in the margin, that is always possible. Quarto offers the 

```
::: {.margin}
<CONTENTS HERE>
:::
``` 

syntax to add a block that moves over to the right.

:::: {.column-margin}
This equation $x^2+y^2=z^2$, should appear in the margin.
::::

If you'd like to draw a table then the pipe syntax is the simplest. If you want tables with more complex entries then use a [Grid Table](https://quarto.org/docs/authoring/tables.html#grid-tables).


| Model            |  mpg | cyl | disp |
|------------------|-----:|----:|----:|
| Mazda RX4        | 21.0 |   6 | 160 |
| Mazda RX4 Wag    | 21.0 |   6 | 160 |
| Datsun 710       | 22.8 |   4 | 108 |
| Hornet 4 Drive   | 21.4 |   6 | 258 |
| Hornet Sportabout| 18.7 |   8 | 360 |
| Valiant          | 18.1 |   6 | 225 |

: My caption {#tbl-mtcars .table .striped .bordered .hover}

In this example some basic style have been added to the table via the line which also specified the caption and label:
```
: My caption {#tbl-mtcars .table .striped .bordered .hover}
```

The key issue for accessibility is that the row containing Model, mpg, cyl and disp should be explicitly identified in the raw output as headers for their respective columns. In @tbl-mtcars this works by default.

:::

::: {.question}

## Question 4


It probably makes more sense to use the margin for things like captions. Captions are placed in the margin with `cap-location: margin`. Then use `fig-cap`, `fig-alt` to specify the caption and alt-text.

```{r}
#| label: fig-cap-margin
#| fig-cap: "MPG vs horsepower, colored by transmission."
#| cap-location: margin
#| fig-alt: "Description of the plot goes here"

library(ggplot2)
mtcars2 <- mtcars
mtcars2$am <- factor(
  mtcars$am, labels = c('automatic', 'manual')
)
ggplot(mtcars2, aes(hp, mpg, color = am)) +
  geom_point() +
  geom_smooth(formula = y ~ x, method = "loess") +
  theme(legend.position = 'bottom')
```
:::

In general, for good printing purposes it's probably best to create images in advance and then include them with the usual syntax, including adding alt-text. see [Quarto Manual -- Figures](https://quarto.org/docs/authoring/figures.html).

If we labelled our figure, with a `#| label:` then we can reference it as @fig-cap-margin.

:::question
## Question X

This is another valid syntax to define a question. Namely ```:::question``` instead of ```:::{.question}```. Best to stick to one, the latter may end up giving you less control over styles.
:::

